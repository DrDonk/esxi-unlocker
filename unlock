#!/bin/sh
# SPDX-FileCopyrightText: © 2014-2021 David Parsons
# SPDX-License-Identifier: MIT

set -e

echo "VMware ESXi Unlocker 4.0.0"
echo "=========================="
echo "© 2011-2022 David Parsons"
echo Installing unlocker...

# Ensure we only use unmodified commands
export PATH=/bin:/sbin:/usr/bin:/usr/sbin
if [ $# -ne 0 ]; then
  case "$1" in
    -v)
      echo "Verbose mode"
      set -x
      ;;
    *)
      echo "Invalid switch!"
      exit 1
      ;;
  esac
fi

# Absolute path to this script
SCRIPT=$(readlink -f "$0")
#echo "$SCRIPT"

# Absolute folder to this script
SCRIPTPATH=$(dirname "$SCRIPT")
#echo "$SCRIPTPATH"

# Change to script folder for processing
cd "$SCRIPTPATH"

# Create a tmp folder for processing and copy files
mkdir -p ./tmp/bin
cp $1 /bin/vmx ./tmp/bin
cp $1 /bin/vmx-debug ./tmp/bin
cp $1 /bin/vmx-stats ./tmp/bin

# Cleanup copied/extracted files
rm $1 -f vmx*

# Do the unlocking stuff
echo Patching vmx files...
python ./patchsmc patch ./tmp/bin/vmx
python ./patchsmc patch ./tmp/bin/vmx-debug
python ./patchsmc patch ./tmp/bin/vmx-stats

# Build a signed GZ/XZ/VMTAR file
echo Building macos.v00 VMTAR file...

#  Compress files to TAR file
cd ./tmp
tar c $1 -f ../macos.tar *
cd ..

# Create VMTAR from TAR file
vmtar -c macos.tar $1 -o macos.vtar 2>/dev/null

# Compress VMTAR into XZ file and add signature
xz --compress --stdout --lzma2=dict=2048KiB --check=crc32 --threads 0 --verbose macos.vtar > macos.xz
cat /usr/share/weasel/s.sigblob >> macos.xz

# Compress XZ-sig to GZIP file
pigz $1 -9 -p 60 -n -T -k -S .v00 macos.xz
mv $1 -f macos.xz.v00 macos.v00

# Copy to main bootbank (BOOTBANK1)
echo Copying macos.v00 to bootbank...
BootModuleConfig.sh --add=macos.v00 --verbose

# Remove the working files
echo Cleaning up tmp files...
rm $1 -rf ./tmp
rm $1 -f vmx.*
echo Success - please now reboot the server!
